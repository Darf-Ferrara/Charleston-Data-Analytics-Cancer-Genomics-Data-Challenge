compare<-read.csv(file.choose(),header=T)
View(compare)
sapply(compare, clas)
sapply(compare, class)
library(ggplot2)
qplot(compare)
compare<-read.csv(file.choose(),header=T)
View(compare)
ggplot(compare, aes(x=Symbol, y=Score))+geom_boxplot()
compare<-read.csv(file.choose(),header=T)
ggplot(compare, aes(x=Symbol, y=Score))+geom_boxplot()
ggplot(compare, aes(x=Symbol, y=Score))+geom_boxplot()+ylim(0,25)
q()
x <- runif(10, 0, 10)
y <- runif(10, 0, 10)
z <- runif(10, 0, 10)
a <- runif(10, 0, 10)
a <- runif(10, 5, 10)
b <- runif(10, 10, 20)
df <- data.frame(x,y,z,a,b)
df
install.packages("devtools")
library("devtools")
install.packages("Rtools")
library("devtools")
install_github("ropensci/plotly")
p <- ggplot(df, aes=(x=x, y=y, color=z)) + geom_point(size=a)
View(df)
p <- ggplot(df, aes(x=x, y=y, color=z)) + geom_point(size=a)
library(ggpot2)
library(ggplot2)
p <- ggplot(df, aes(x=x, y=y, color=z)) + geom_point(size=a)
p
py$ggplotly(p)
Sys.getenv("R_LIBS_USER")
quit()
q()
data(mtcars)
pairs(mtcars)
pairs.panel(mtcars)
pairs.panels(mtcars)
install.packages("psych")
pairs.panels(mtcars)
library(psych)
pairs.panels(mtcars)
q()
allAmp<-read.csv(file.choose(), header=T)
dim(allAmp)
q()
download.file(ftp://ftp.sanger.ac.uk/pub/project/cancerrxgene/releases/release-5.0/gdsc_manova_input_w5.csv,"test.csv")
download.file(ftp:\\ftp.sanger.ac.uk\pub\project\cancerrxgene\releases\release-5.0\gdsc_manova_input_w5.csv,"test.csv")
download.file("ftp://ftp.sanger.ac.uk/pub/project/cancerrxgene/releases/release-5.0/gdsc_manova_input_w5.csv","test.csv")
getwd()
drugs<-read.csv("test.csv", header=T)
View(drugs)
drugs <- drugs[6:712,]
View(drugs)
which(names(drugs)=="MLL_AFF1")
drugs <- drugs[,76:2035]
View(drugs)
drugs<-read.csv("test.csv", header=T)
View(drugs)
drugs <- drugs[c(1,6:712),]
View(drugs)
download.file("ftp://ftp.sanger.ac.uk/pub/project/cancerrxgene/releases/release-5.0/gdsc_manova_input_w5.csv","test.csv")
drugs<-read.csv("test.csv", header=T)
drugs <- drugs[6:712,]
drugs <- drugs[,c(1,76:2035)]
View(drugs)
names(drugs)
drugs <- drugs[,1:141]
View(drugs)
names(drugs)
x<-names(drugs)
x<-as.data.frame(x)
View(x)
x<-x[order(x$x),]
head(x)
which(names(drugs)=="ABT.263_IC_50")
View(drugs)
summary(drugs[,92])
sapply(drugs,class)
?read.csv()
drugs<-read.csv("test.csv", header=T, stringsAsFactors=F)
drugs <- drugs[6:712,]
drugs <- drugs[,c(1,76:2035)]
drugs <- drugs[,1:141]
sapply(class, drugs)
sapply(drugs,class)
View(drugs)
sapply(drugs[,2:707], as.numeric)
sapply(drugs[,2:141], as.numeric)
drugs<-sapply(drugs[,2:141], as.numeric)
sapply(drugs, class)
drugs<-read.csv("test.csv", header=T, stringsAsFactors=F)
drugs <- drugs[6:712,]
drugs <- drugs[,c(1,76:2035)]
drugs <- drugs[,1:141]
drugs <- sapply(drugs[2:141],as.numeric)
drugs<-read.csv("test.csv", header=T, stringsAsFactors=F)
drugs <- drugs[6:712,]
drugs <- drugs[,c(1,76:2035)]
drugs <- drugs[,1:141]
drugs[2:141] <- sapply(drugs[2:141],as.numeric)
sapply(drugs, class)
summary(drugs[,92])
q()
install.packages("viridis")
install.packages("devtools")
devtools::install_github("ropensci/plotly")
devtools::install_github("ropensci/plotly")
install.packages("stringi")
devtools::install_github("ropensci/plotly")
q()
devtools::install_github("ropensci/plotly")
q()
install.packages("viridis")
install.packages("devtools")
devtools::install_github("ropensci/plotly")
install.packages("stringi")
q()
install.packages("stringi")
q()
install.packages("RISmed")
library(RISmed)
search_query <- EUtilsSummary("FGFR2", retmax=100, mindate=2012, maxdate=2012)
summary(search_query)
QueryId(search_query)
search_query <- EUtilsSummary("Apert Syndrome", retmax=100, mindate=2012, maxdate=2012)
summary(search_query)
QueryId(search_query)
FGFR2 <- EUtilsSummary("FGFR2", retmax=100, mindate=2012, maxdate=2012)
apert_Syndrome <- EUtilsSummary("apert syndrom", retmax=100, mindate=2012, maxdate=2012)
FGFR2_PMIDS <- QueryId(FGFR2)
apert_Syndrome <- QueryId(apert_Syndrome)
merge(FGFR2_PMIDS, appert_Sydrome)
merge(FGFR2_PMIDS, apert_Sydrome)
merge(FGFR2_PMIDS, apert_Syndrome)
class(FGFR2_PMIDS)
merge(as.numderic(FGFR2_PMIDS), as.numeric(apert_Syndrome)
)
merge(as.numeric(FGFR2_PMIDS), as.numeric(apert_Syndrome))
as.numeric(FGFR2_PMIDS)
intersect(as.numeric(FGFR2_PMIDS), as.numeric(apert_Syndrome))
as.numeric(apert_Syndrome)
apert_Syndrome <- EUtilsSummary("apert syndrom", retmax=100, mindate=2012, maxdate=2012)
summary(apert_Syndrome)
apert_Syndrome <- EUtilsSummary("apert syndrome", retmax=100, mindate=2012, maxdate=2012)
summary(apert_Syndrome)
AS_PMIDS <- QueryID(apert_Syndrome)
AS_PMIDS <- QueryId(apert_Syndrome)
intersect(as.numeric(FGFR2_PMIDS), as.numeric(AS_PMIDS))
tcpa <- read.csv(file.choose(), header=T)
tcpa <- read.csv(file.choose(), header=T)
View(tcpa)
tcpa_bclxl <- tcpa[order(tcpa$Bcl.xL.R.V_GBL9010486.txt),]
View(tcpa_bclxl)
which(tcpa_bclxl$Sample.description = "HCC38")
which(tcpa_bclxl$Sample.description == "HCC38")
tcpa_bclxl[161,1:10]
tcpa_bclxl[178,1:10]
which(tcpa_bclxl$Sample.description == "T-47D")
test <- unique(tcpa$Sample.description)
which(tcpa_bclxl$Sample.description == "HCC1143")
which(tcpa_bclxl$Sample.description == "HCC1806")
batch35 <- read.csv(file.choose(), header=T)
View(batch35)
batch35 <- batch35ordered[order(batch35$Bcl.xL),]
batch35ordered <- batch35[order(batch35$Bcl.xL),]
which(batch35ordered$Sample.description == "HCC38")
which(batch35ordered$Sample.description == "MB-175")
which(batch35ordered$Sample.description == "HCC-38")
View(batch35ordered)
batch55 <- read.csv(file.choose(), header=T)
View(batch55)
?EUtilsSummary
FGFR2 <- EUtilsSummary("FGFR2", retmax=1000)
summary(FGFR2)
breast_cancer <- EUtilsSummary("breast cancer", retmax=1000)
summary(breast_cancer)
breast_cancer <- EUtilsSummary("breast cancer", retmax=10000)
breast_cancer <- EUtilsSummary("breast cancer", retmax=500000)
breast_cancer <- EUtilsSummary("breast cancer", retmax=50000)
breast_cancer <- EUtilsSummary("breast cancer", retmax=100000)
breast_cancer <- EUtilsSummary("breast cancer", retmax=99000)
breast_cancer <- EUtilsSummary("breast cancer", retmax=99999)
litint <- function(term1, term2) {
x <- EUtilsSummary(term1, retmax=99999)
y <- EUtilsSummary(term2, retmax=99999)
x_PMIDS <- QueryId(x)
y_PMIDS <- QueryId(y)
in_common <- intersect(as.numeric(x_PMIDS), as.numeric(y_PMIDS))
print(in_common)
}
litint("FGFR2", "apert syndrome")
x <- 1:10
length(x)
len(x)
litint <- function(term1, term2) {
x <- EUtilsSummary(term1, retmax=99999)
y <- EUtilsSummary(term2, retmax=99999)
x_PMIDS <- QueryId(x)
y_PMIDS <- QueryId(y)
in_common <- intersect(as.numeric(x_PMIDS), as.numeric(y_PMIDS))
print(in_common)
print(length(in_common))
}
litint("FGFR2", "apert syndrome")
mylist <- list(a="FGFR1",b="FGFR2",c="FGFR3")
sapply(mylist,litint,term2="apert syndrome")
litint <- function(term1, term2) {
x <- EUtilsSummary(term1, retmax=99999)
y <- EUtilsSummary(term2, retmax=99999)
x_PMIDS <- QueryId(x)
y_PMIDS <- QueryId(y)
in_common <- intersect(as.numeric(x_PMIDS), as.numeric(y_PMIDS))
print(length(in_common))
}
sapply(mylist,litint,term2="apert syndrome")
litint <- function(term1, term2) {
x <- EUtilsSummary(term1, retmax=99999)
y <- EUtilsSummary(term2, retmax=99999)
x_PMIDS <- QueryId(x)
y_PMIDS <- QueryId(y)
in_common <- intersect(as.numeric(x_PMIDS), as.numeric(y_PMIDS))
#print(length(in_common))
}
sapply(mylist,litint,term2="apert syndrome")
litint <- function(term1, term2) {
x <- EUtilsSummary(term1, retmax=99999)
y <- EUtilsSummary(term2, retmax=99999)
x_PMIDS <- QueryId(x)
y_PMIDS <- QueryId(y)
in_common <- intersect(as.numeric(x_PMIDS), as.numeric(y_PMIDS))
print(length(in_common))
}
sapply(mylist,litint,term2="apert syndrome")
x <- sapply(mylist,litint,term2="apert syndrome")
x
class(x)
length
length(x)
apply(mylist,litint,term2="apert syndrome")
lapply(mylist,litint,term2="apert syndrome")
x <- lapply(mylist,litint,term2="apert syndrome")
x
class(x)
embedded <- function(x) {
y <- x^2
i <- function(y) {
z <- y^2
print(z)
}
}
embedded(2)
embedded <- function(x) {
y <- x^2
i <- function(y) {
z <- y^2
print(i)
}
}
embedded(2)
embedded <- function(x) {
y <- x^2
i <- function(y) {
z <- y^2
print(i)
}
print(x)
print(y)
print(z)
print(i)
}
embedded(2)
embedded <- function(x) {
y <- x^2
i <- function(y) {
z <- y^2
print(y)
}
print(x)
print(y)
}
embedded(2)
embedded <- function(x) {
y <- x^2
i <- function(y) {
z <- y^2
}
print(x)
print(y)
}
embedded(2)
embedded <- function(x) {
y <- x^2
i <- function(y) {
z <- y^2
}
print(x)
print(y)
print(i)
}
embedded(2)
embedded <- function(x) {
y <- x^2
i <- function(y) {
y^2
}
i(y)
}
embedded(2)
rm(mylist)
hits <- list("FGFR2", "FGFR2", "FGFR3"))
hits <- list("FGFR2", "FGFR2", "FGFR3")
litint2 <- function(mylist, term2)  {
litint <- function(term1, term2) {
x <- EUtilsSummary(term1, retmax=99999)
y <- EUtilsSummary(term2, retmax=99999)
x_PMIDS <- QueryId(x)
y_PMIDS <- QueryId(y)
in_common <- intersect(as.numeric(x_PMIDS), as.numeric(y_PMIDS))
print(length(in_common))
}
sapply(mylist,litint,term2=term2)
}
litint2(hits,"apert syndrome")
hits[1] <- "FGFR1"
litint2(hits,"apert syndrome")
x<-litint2(hits,"apert syndrome")
x
rm(list=ls())
q()
library(cgdsr)
mycgds = CGDS("http://www.cbioportal.org/public-portal/")
getGeneticProfiles(mycgds,"cellline_ccle_broad_all")
getCancerStudies(mycgds)
getCancerStudies(mycgds)[2,1]
getCancerStudies(mycgds)[2,17]
getCancerStudies(mycgds)[2,12]
getCancerStudies(mycgds)[2,2]
getCancerStudies(mycgds)[17,1]
mycancerstudy = getCancerStudies(mycgds)[17,1]
getGeneticProfiles(mycgds,mycancerstudy)
getGeneticProfiles(mycgds,mycancerstudy)[1,1]
hugo<-read.csv(file.choose(), header=T)
not_Withdrawn<-hugo$Approved.Name!="entry withdrawn"
hugo1<-hugo[not_Withdrawn,]
withdrawn<-grep("^symbol withdrawn", hugo$Approved.Name)
hugo_final<-hugo[-(withdrawn),]
all_gene_symbols<-hugo_final[[2]]
all_gene_symbols<-as.character(all_gene_symbols)
all_gene_symbols<-unique(all_gene_symbols)
Log2_CN_Data<-data.frame(matrix(nrow=1019, ncol=length(all_gene_symbols)))
for(i in 1:length(all_gene_symbols)) {
Log2_CN_Data[i] <- getProfileData(mycgds,all_gene_symbols[i],"cellline_ccle_broad_log2CNA", "cellline_ccle_broad_all")
}
#I add the appropriate gene symbols as column names
names(Log2_CN_Data)<-all_gene_symbols[1:length(all_gene_symbols)]
#I add the appropriate cell line names as row names
x<-getProfileData(mycgds,all_gene_symbols[1],"cellline_ccle_broad_log2CNA", "cellline_ccle_broad_all")
rownames(Log2_CN_Data)<-rownames(x)
#We'll next get rid of the tissue type from the end of the cell line name and also change the two cell lines
#that are both named "TT" into "TT1" and "TT2".
new_names<-sub("_.*", "", row.names(Log2_CN_Data))
new_names[906]<-"TT1"
new_names[907]<-"TT2"
row.names(Log2_CN_Data)<-new_names
#Getting rid of columns that contain only NAs
Log2_CN_NA_Cols_Removed<-Filter(function(x)!all(is.na(x)), Log2_CN_Data)
#Getting rid of rows that contain only NAs
Log2_CN_NA_Cols_Removed<-Log2_CN_NA_Cols_Removed[rowSums(is.na(Log2_CN_NA_Cols_Removed)) != ncol(Log2_CN_NA_Cols_Removed),]
#Let's write the file to the Git repo
write.csv(Log2_CN_NA_Cols_Removed, file="CCLE_All__Log2_CN_Data_TCGA.csv")
pwd()
getwd()
View(Log2_CN_NA_Cols_Removed)
download.file("ftp://ftp.sanger.ac.uk/pub/project/cancerrxgene/releases/release-5.0/gdsc_manova_input_w5.csv","test.csv")
drugs<-read.csv("test.csv", header=T, stringsAsFactors=F)
drugs <- drugs[6:712,]
drugs <- drugs[,c(1,76:2035)]
drugs <- drugs[,1:141]
drugs[2:141] <- sapply(drugs[2:141],as.numeric)
drugs$Cell.Line <- gsub("-", "", drugs$Cell.Line)
names(drugs) <- gsub("_IC_50", "", names(drugs))
Nav<-drugs[,c(1,92)]
setwd("C:/Users/stg43/R_Programming/CCLE_Genomic_Data_Sets")
Copy_Number <- read.csv("CCLE_All_Copy_Number_Data_TCGA.csv",header=T)
names(Copy_Number)[1] <- "Cell.Line"
Nav_Copy_Number <- merge(Nav, Copy_Number, by = "Cell.Line")
Nav_Copy_Number$Scaled <- scale(Nav_Copy_Number$ABT.263, center=T, scale=T)
Nav_Copy_Number<-Nav_Copy_Number[,c(1:2, 21523,3:21522)]
Nav_Copy_Number <- Nav_Copy_Number[!is.na(Nav_Copy_Number$ABT.263),]
Exp <- read.csv("CCLE_All__Exp_Data_TCGA.csv",header=T)
names(Exp)[1] <- "Cell.Line"
Nav_Exp <- merge(Nav, Exp, by = "Cell.Line")
Nav_Exp$Scaled <- scale(Nav_Exp$ABT.263, center=T, scale=T)
Nav_Exp <- Nav_Exp[,c(1:2, 16062,3:16061)]
Nav_Exp <- Nav_Exp[!is.na(Nav_Exp$ABT.263),]
Mut <- read.csv("CCLE_All__Mut_Data_TCGA.csv",header=T)
names(Mut)[1] <- "Cell.Line"
Nav_Mut <- merge(Nav, Mut, by = "Cell.Line")
Nav_Mut$Scaled <- scale(Nav_Mut$ABT.263, center=T, scale=T)
Nav_Mut <- Nav_Mut[,c(1:2, 2174,3:2173)]
Nav_Mut <- Nav_Mut[!is.na(Nav_Mut$ABT.263),]
Log2_CN <- read.csv("CCLE_All__Log2_CN_Data_TCGA.csv",header=T)
names(Log2_CN)[1] <- "Cell.Line"
Nav_Log2_CN <- merge(Nav, Log2_CN, by = "Cell.Line")
Nav_Log2_CN$Scaled <- scale(Nav_Log2_CN$ABT.263, center=T, scale=T)
Nav_Log2_CN <- Nav_Log2_CN[,c(1:2, 2174,3:2173)]
Nav_Log2_CN <- Nav_Log2_CN[!is.na(Nav_Log2_CN$ABT.263),]
names(Nav_Copy_Number)[1] <- "tumorID"
names(Nav_Copy_Number)[2] <- "IC50"
names(Nav_Copy_Number)[3] <- "Z_score"
names(Nav_Exp)[1] <- "tumorID"
names(Nav_Exp)[2] <- "IC50"
names(Nav_Exp)[3] <- "Z_score"
names(Nav_Mut)[1] <- "tumorID"
names(Nav_Mut)[2] <- "IC50"
names(Nav_Mut)[3] <- "Z_score"
names(Nav_Log2_CN)[1] <- "tumorID"
names(Nav_Log2_CN)[2] <- "IC50"
names(Nav_Log2_CN)[3] <- "Z_score"
x <- setdiff(Nav_Copy_Number$tumorID, Nav_Mut$tumorID)
Nav_Copy_Number <- Nav_Copy_Number[!Nav_Copy_Number$tumorID %in% x,]
x <- setdiff(Nav_Exp$tumorID, Nav_Mut$tumorID)
Nav_Exp <- Nav_Exp[!Nav_Exp$tumorID %in% x,]
x <- setdiff(Nav_Log2_CN$tumorID, Nav_Mut$tumorID)
Nav_Log2_CN <- Nav_Log2_CN[!Nav_Log2_CN$tumorID %in% x,]
rm(list=ls())
download.file("ftp://ftp.sanger.ac.uk/pub/project/cancerrxgene/releases/release-5.0/gdsc_manova_input_w5.csv","test.csv")
drugs<-read.csv("test.csv", header=T, stringsAsFactors=F)
drugs <- drugs[6:712,]
drugs <- drugs[,c(1,76:2035)]
drugs <- drugs[,1:141]
drugs[2:141] <- sapply(drugs[2:141],as.numeric)
drugs$Cell.Line <- gsub("-", "", drugs$Cell.Line)
names(drugs) <- gsub("_IC_50", "", names(drugs))
Nav<-drugs[,c(1,92)]
setwd("C:/Users/stg43/R_Programming/CCLE_Genomic_Data_Sets")
Copy_Number <- read.csv("CCLE_All_Copy_Number_Data_TCGA.csv",header=T)
names(Copy_Number)[1] <- "Cell.Line"
Nav_Copy_Number <- merge(Nav, Copy_Number, by = "Cell.Line")
Nav_Copy_Number$Scaled <- scale(Nav_Copy_Number$ABT.263, center=T, scale=T)
Nav_Copy_Number<-Nav_Copy_Number[,c(1:2, 21523,3:21522)]
Nav_Copy_Number <- Nav_Copy_Number[!is.na(Nav_Copy_Number$ABT.263),]
Exp <- read.csv("CCLE_All__Exp_Data_TCGA.csv",header=T)
names(Exp)[1] <- "Cell.Line"
Nav_Exp <- merge(Nav, Exp, by = "Cell.Line")
Nav_Exp$Scaled <- scale(Nav_Exp$ABT.263, center=T, scale=T)
Nav_Exp <- Nav_Exp[,c(1:2, 16062,3:16061)]
Nav_Exp <- Nav_Exp[!is.na(Nav_Exp$ABT.263),]
Mut <- read.csv("CCLE_All__Mut_Data_TCGA.csv",header=T)
names(Mut)[1] <- "Cell.Line"
Nav_Mut <- merge(Nav, Mut, by = "Cell.Line")
Nav_Mut$Scaled <- scale(Nav_Mut$ABT.263, center=T, scale=T)
Nav_Mut <- Nav_Mut[,c(1:2, 2174,3:2173)]
Nav_Mut <- Nav_Mut[!is.na(Nav_Mut$ABT.263),]
Log2_CN <- read.csv("CCLE_All__Log2_CN_Data_TCGA.csv",header=T)
names(Log2_CN)[1] <- "Cell.Line"
Nav_Log2_CN <- merge(Nav, Log2_CN, by = "Cell.Line")
Nav_Log2_CN$Scaled <- scale(Nav_Log2_CN$ABT.263, center=T, scale=T)
Nav_Log2_CN <- Nav_Log2_CN[,c(1:2, 2174,3:2173)]
Nav_Log2_CN <- Nav_Log2_CN[!is.na(Nav_Log2_CN$ABT.263),]
Nav_Log2_CN <- merge(Nav, Log2_CN, by = "Cell.Line")
Nav_Log2_CN$Scaled <- scale(Nav_Log2_CN$ABT.263, center=T, scale=T)
Nav_Log2_CN <- Nav_Log2_CN[,c(1:2, 17229,3:17228)]
Nav_Log2_CN <- Nav_Log2_CN[!is.na(Nav_Log2_CN$ABT.263),]
View(Nav_Log2_CN)
View(Nav_Log2_CN)
Nav_Log2_CN <- merge(Nav, Log2_CN, by = "Cell.Line")
Nav_Log2_CN$Scaled <- scale(Nav_Log2_CN$ABT.263, center=T, scale=T)
Nav_Log2_CN <- Nav_Log2_CN[,c(1:2, 17231,3:17230)]
Nav_Log2_CN <- Nav_Log2_CN[!is.na(Nav_Log2_CN$ABT.263),]
View(Nav_Log2_CN)
summary(Nav_Log2_CN$Scaled)
names(Nav_Copy_Number)[1] <- "tumorID"
names(Nav_Copy_Number)[2] <- "IC50"
names(Nav_Copy_Number)[3] <- "Z_score"
names(Nav_Exp)[1] <- "tumorID"
names(Nav_Exp)[2] <- "IC50"
names(Nav_Exp)[3] <- "Z_score"
names(Nav_Mut)[1] <- "tumorID"
names(Nav_Mut)[2] <- "IC50"
names(Nav_Mut)[3] <- "Z_score"
names(Nav_Log2_CN)[1] <- "tumorID"
names(Nav_Log2_CN)[2] <- "IC50"
names(Nav_Log2_CN)[3] <- "Z_score"
x <- setdiff(Nav_Copy_Number$tumorID, Nav_Mut$tumorID)
Nav_Copy_Number <- Nav_Copy_Number[!Nav_Copy_Number$tumorID %in% x,]
x <- setdiff(Nav_Exp$tumorID, Nav_Mut$tumorID)
Nav_Exp <- Nav_Exp[!Nav_Exp$tumorID %in% x,]
x <- setdiff(Nav_Log2_CN$tumorID, Nav_Mut$tumorID)
Nav_Log2_CN <- Nav_Log2_CN[!Nav_Log2_CN$tumorID %in% x,]
setwd("C:/Users/stg43/R_Programming/COSMIC_Genomics_of_Drug_Sensitivity")
write.csv(Nav_Log2_CN, file="COSMIC_copy_number_log2ratios.csv", row.names=F)
setwd("I:/Git_Repos/Charleston-Data-Analytics-Cancer-Genomics-Data-Challenge")
list.files()
old_cn <- read.csv("copy_number.csv", header=T)
View(old_cn)
summary(old_cn$response_metric_AUC)
class(old_cn$response_metric_AUC)
as.numeric(as.character(old_cn$response_metric_AUC))
old_cn$response_metric_AUC <- as.numeric(as.character(old_cn$response_metric_AUC))
summary(old_cn$response_metric_AUC)
list.files()
View(old_cn)
new_cn <- read.csv("COSMIC_copy_number.csv", header=T)
View(new_cn)
class(new_cn$IC50)
summary(new_cn$IC50)
q()
